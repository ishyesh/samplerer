def interpretcharmmtemplate(templatefilepath):
    f=open(templatefilepath,"r")
    lines = f.read().split("\n")

    tasklist = list()
    for cline in lines:
        if "function" in cline:
            newconfig=dict()
            cstripped=cline.split()
            for ccommand in cstripped:
                if "function" in ccommand:
                    newconfig["function"]=ccommand[9:]
                if "source" in ccommand:
                    newconfig["source"]=ccommand[7:]

            tasklist.append(newconfig)
            newconfig["-stringinfile"]=cline


    return tasklist


def execute(filewriteconfig,filetasks):
    import fileio.charmmscriptgen
    import fileio.fileiomanipulation
    import variablemanipulation.configmanipulation
    import copy
    from time import localtime, strftime

    timestring= strftime("%Y-%m-%d %H:%M:%S", localtime())

    for currfile in filewriteconfig:
        cfilename=currfile["main"]["simulationdirectory"]["value"]
        fileio.fileiomanipulation.makedirectory(cfilename)
        f=open(cfilename+currfile["umbsamp"]["charmmscriptname"]["value"],"w")
        f.write("!This script was generated by genfiles.py on "+timestring)
        f.write("\n")
        f.write("\n")
        for ctask in filetasks:
            sources = ctask["source"].rstrip(',').lstrip(',').split(",")

            topassthrough=dict()
            toadd=dict()
            topassthrough[sources[0]]=copy.deepcopy(currfile[sources[0]])
            for individualsources in sources:
                toadd[sources[0]]=currfile[individualsources]
                topassthrough=variablemanipulation.configmanipulation.evaluateinorder( topassthrough, toadd)

            functionhandle=getattr(fileio.charmmscriptgen, ctask["function"])
            string=functionhandle(topassthrough[sources[0]])

#            f.write("                    !=====Generating string \""+ctask["-stringinfile"]+"\" =====!")
            f.write('\n')
            f.write(string)
            f.write('\n')




